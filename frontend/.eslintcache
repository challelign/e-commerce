[{"D:\\projects\\e-commerce\\frontend\\src\\index.js":"1","D:\\projects\\e-commerce\\frontend\\src\\App.js":"2","D:\\projects\\e-commerce\\frontend\\src\\store.js":"3","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Login.js":"4","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Profile.js":"5","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Footer.js":"6","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Register.js":"7","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdatePassword.js":"8","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdateProfile.js":"9","D:\\projects\\e-commerce\\frontend\\src\\components\\Home.js":"10","D:\\projects\\e-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js":"11","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\NewPassword.js":"12","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Header.js":"13","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Payment.js":"14","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Cart.js":"15","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Shipping.js":"16","D:\\projects\\e-commerce\\frontend\\src\\components\\product\\ProductDetails.js":"17","D:\\projects\\e-commerce\\frontend\\src\\reducers\\productReducers.js":"18","D:\\projects\\e-commerce\\frontend\\src\\reducers\\userReducers.js":"19","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\OrderSuccess.js":"20","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\ConfirmOrder.js":"21","D:\\projects\\e-commerce\\frontend\\src\\reducers\\orederReducers.js":"22","D:\\projects\\e-commerce\\frontend\\src\\reducers\\cartReducers.js":"23","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\ForgetPassword.js":"24","D:\\projects\\e-commerce\\frontend\\src\\actions\\userActions.js":"25","D:\\projects\\e-commerce\\frontend\\src\\constants\\userConstants.js":"26","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Loader.js":"27","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\MetaData.js":"28","D:\\projects\\e-commerce\\frontend\\src\\components\\product\\product.js":"29","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Search.js":"30","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\CheckoutSteps.js":"31","D:\\projects\\e-commerce\\frontend\\src\\constants\\productConstants.js":"32","D:\\projects\\e-commerce\\frontend\\src\\actions\\productActions.js":"33","D:\\projects\\e-commerce\\frontend\\src\\constants\\orderConstants.js":"34","D:\\projects\\e-commerce\\frontend\\src\\actions\\orderActions.js":"35","D:\\projects\\e-commerce\\frontend\\src\\constants\\cartConstants.js":"36","D:\\projects\\e-commerce\\frontend\\src\\actions\\cartActions.js":"37","D:\\projects\\e-commerce\\frontend\\src\\components\\order\\ListOrders.js":"38","D:\\projects\\e-commerce\\frontend\\src\\components\\order\\OrderDetails.js":"39","D:\\projects\\e-commerce\\frontend\\src\\components\\review\\ListReviews.js":"40"},{"size":908,"mtime":1667284466091,"results":"41","hashOfConfig":"42"},{"size":3498,"mtime":1668601626844,"results":"43","hashOfConfig":"42"},{"size":1419,"mtime":1669625392200,"results":"44","hashOfConfig":"42"},{"size":3264,"mtime":1667906957821,"results":"45","hashOfConfig":"42"},{"size":2220,"mtime":1667284466086,"results":"46","hashOfConfig":"42"},{"size":427,"mtime":1667284466084,"results":"47","hashOfConfig":"42"},{"size":4535,"mtime":1667284466087,"results":"48","hashOfConfig":"42"},{"size":3060,"mtime":1667284466087,"results":"49","hashOfConfig":"42"},{"size":5277,"mtime":1667290431839,"results":"50","hashOfConfig":"42"},{"size":8937,"mtime":1667284466084,"results":"51","hashOfConfig":"42"},{"size":777,"mtime":1667284466086,"results":"52","hashOfConfig":"42"},{"size":3009,"mtime":1667310749580,"results":"53","hashOfConfig":"42"},{"size":3504,"mtime":1667378647517,"results":"54","hashOfConfig":"42"},{"size":5721,"mtime":1668409757739,"results":"55","hashOfConfig":"42"},{"size":5502,"mtime":1667906957819,"results":"56","hashOfConfig":"42"},{"size":4975,"mtime":1667906957821,"results":"57","hashOfConfig":"42"},{"size":10644,"mtime":1669703033763,"results":"58","hashOfConfig":"42"},{"size":2837,"mtime":1669619259306,"results":"59","hashOfConfig":"42"},{"size":4385,"mtime":1669618789245,"results":"60","hashOfConfig":"42"},{"size":828,"mtime":1668406143503,"results":"61","hashOfConfig":"42"},{"size":4038,"mtime":1669707149081,"results":"62","hashOfConfig":"42"},{"size":2355,"mtime":1668599679381,"results":"63","hashOfConfig":"42"},{"size":1269,"mtime":1669618789224,"results":"64","hashOfConfig":"42"},{"size":2241,"mtime":1667293365858,"results":"65","hashOfConfig":"42"},{"size":5694,"mtime":1669619347265,"results":"66","hashOfConfig":"42"},{"size":1518,"mtime":1667303851108,"results":"67","hashOfConfig":"42"},{"size":234,"mtime":1667284466084,"results":"68","hashOfConfig":"42"},{"size":326,"mtime":1667284466085,"results":"69","hashOfConfig":"42"},{"size":1325,"mtime":1667284466085,"results":"70","hashOfConfig":"42"},{"size":1324,"mtime":1667284466085,"results":"71","hashOfConfig":"42"},{"size":2416,"mtime":1669707030698,"results":"72","hashOfConfig":"42"},{"size":634,"mtime":1669618529330,"results":"73","hashOfConfig":"42"},{"size":2507,"mtime":1669623508921,"results":"74","hashOfConfig":"42"},{"size":560,"mtime":1669618789167,"results":"75","hashOfConfig":"42"},{"size":2065,"mtime":1669705833227,"results":"76","hashOfConfig":"42"},{"size":162,"mtime":1667906957829,"results":"77","hashOfConfig":"42"},{"size":1275,"mtime":1669619347282,"results":"78","hashOfConfig":"42"},{"size":2800,"mtime":1668587993608,"results":"79","hashOfConfig":"42"},{"size":3923,"mtime":1668604707411,"results":"80","hashOfConfig":"42"},{"size":761,"mtime":1669639503225,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"jywhpr",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"D:\\projects\\e-commerce\\frontend\\src\\index.js",[],["175","176"],"D:\\projects\\e-commerce\\frontend\\src\\App.js",[],"D:\\projects\\e-commerce\\frontend\\src\\store.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Login.js",["177"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../layout/Loader\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { login, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst Login = ({ history, location }) => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  //isAuthenticated, error, loading parametrs call from userReducers.js  authReducer method\r\n  const { isAuthenticated, error, loading } = useSelector(\r\n    (state) => state.auth\r\n  ); // auth is from userReducers\r\n\r\n  //this check it the user is checkout some item , and he is not logged in ,\r\n  // will add shipping to the url after login\r\n  // http://localhost:3000/login?redirect=shipping\r\n  const redirect = location.search? location.search.split('=')[1]:'/'\r\n//and take shipping else '/'\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // history.push(\"/\");\r\n      history.push(redirect)\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, alert, isAuthenticated, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //this link to login.js component\r\n    //call login.js component\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={\"Login\"} />\r\n          <div className=\"row wrapper\">\r\n            <div className=\"col-10 col-lg-5\">\r\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                <h1 className=\"mb-3\">Login</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email_field\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email_field\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_field\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password_field\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/password/forget\" className=\"float-right mb-4\">\r\n                  Forgot Password?\r\n                </Link>\r\n\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                >\r\n                  LOGIN\r\n                </button>\r\n\r\n                <Link to=\"/register\" className=\"float-right mt-3\">\r\n                  New User?\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Profile.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Register.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdateProfile.js",["178"],"import React, {Fragment, useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {updateProfile, loadUser, clearErrors} from \"../../actions/userActions\";\r\nimport {UPDATE_PROFILE_RESET} from \"../../constants/userConstants\";\r\n\r\n\r\nconst UpdateProfile = ({history}) => {\r\n\r\n    const [name, setName] = useState();\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    const [avatarPreview, setAvatarPreview] = useState(\"/images/camera.jpg\");\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const {user} = useSelector((state) => state.auth); // auth is from userReducers\r\n\r\n    const {error, isUpdated, loading} = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n\r\n        }\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('user updated successfully')\r\n            dispatch(loadUser())\r\n            history.push('/me')\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n\r\n        }\r\n    }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set(\"name\", name);\r\n        formData.set(\"email\", email);\r\n        formData.set(\"avatar\", avatar);\r\n\r\n        dispatch(updateProfile(formData));\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result);\r\n                setAvatar(reader.result);\r\n            }\r\n        };\r\n\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={\"Update Profile\"}/>\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={(e) =>setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={(e) =>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        name=\"avatar\"\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"   disabled={loading ? true : false}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateProfile","D:\\projects\\e-commerce\\frontend\\src\\components\\Home.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js",["179"],"import React, {Fragment} from \"react\";\r\n\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n\r\n    const {isAuthenticated, loading, user} = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login'/>\r\n                        }\r\n                        return <Component {...props}/>\r\n                    }}\r\n                />\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default ProtectedRoute","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Header.js",["180","181","182"],"import React, {Fragment} from \"react\";\r\nimport '../../App.css'\r\nimport {Link, Route} from 'react-router-dom'\r\nimport MetaData from \"./MetaData\";\r\nimport Search from \"./Search\";\r\nimport {useAlert} from 'react-alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {logout} from \"../../actions/userActions\";\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const {user, loading} = useSelector(state => state.auth)\r\n\r\n    const {cartItems} = useSelector(state => state.cart)\r\n    const logoutHandler = () =>{\r\n        dispatch(logout());\r\n        alert.success('Logged out Successfully.')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to={'/'}>\r\n                            <img src=\"/images/logo.png\"/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n\r\n                    <Route render={({history}) => <Search history={history}/>}/>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{textDecoration: 'none'}}>\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        // alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                {/*<Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>*/}\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>\r\n                    }\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Payment.js",["183"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {useAlert} from \"react-alert\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\nimport {useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement} from \"@stripe/react-stripe-js\";\r\n\r\nimport {createOrder, clearErrors} from \"../../actions/orderActions\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\nconst Payment = ({history}) => {\r\n\r\n\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const {user} = useSelector(state => state.auth)\r\n    const {cartItems, shippingInfo} = useSelector(state => state.cart);\r\n\r\n    const {error} = useSelector(state => state.newOrder);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'))\r\n    if (orderInfo) {\r\n\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            if (!stripe || !elements) {\r\n                return\r\n            }\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false\r\n            } else {\r\n                //the payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    //    TODO : New Order\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n                    dispatch(createOrder(order))\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error(\"There is some issue while payment processing\");\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false\r\n            alert.error(error.response.data.message)\r\n\r\n            console.log(error.response.data)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <MetaData title={'Payment-detail'}/>\r\n\r\n            <CheckoutSteps shipping confirmOrder payment/>\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay{` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Payment","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Cart.js",["184","185","186"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport {addItemToCart,removeItemFromCart} from \"../../actions/cartActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Cart = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const {cartItems} = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) =>{\r\n\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n\r\n        const newQty = quantity + 1\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n    const decreaseQty = (id, quantity) => {\r\n        const newQty = quantity - 1\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    //when the user click checkout button and the user is not logged in it should be redirect to login?redirect=shipping page\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'}/>\r\n\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\"> Your cart is empty </h2> : (\r\n                <Fragment>\r\n                    <div className=\"container container-fluid\">\r\n                        <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length}</b></h2>\r\n\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <div className=\"col-12 col-lg-8\">\r\n\r\n                                {cartItems.map(item => (\r\n                                    <Fragment>\r\n                                        <hr/>\r\n                                        <div className=\"cart-item\" key={item.product}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-4 col-lg-3\">\r\n                                                    <img src={item.image} alt=\"Laptop\" height=\"90\"\r\n                                                         width=\"115\"/>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-3\">\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p id=\"card_item_price\">$ {item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <div className=\"stockCounter d-inline\">\r\n                                                        <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}\r\n                                                              readOnly>-</span>\r\n                                                        <input type=\"number\" className=\"form-control count d-inline\"\r\n                                                               value={item.quantity}/>\r\n\r\n                                                        <span className=\"btn btn-primary plus\"\r\n                                                              value={item.quantity}\r\n                                                              onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                    <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)}></i>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr/>\r\n                                    </Fragment>\r\n                                ))}\r\n\r\n                                <hr/>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-lg-3 my-4\">\r\n                                <div id=\"order_summary\">\r\n                                    <h4>Order Summary</h4>\r\n                                    <hr/>\r\n                                    <p>Subtotal: <span className=\"order-summary-values\">{cartItems.reduce((acc , item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                    <p>Est. total: <span className=\"order-summary-values\">$ {cartItems.reduce((acc , item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                    <hr/>\r\n                                    <button id=\"checkout_btn\" onClick={checkoutHandler} className=\"btn btn-primary btn-block\">Check out</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Shipping.js",["187"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {countries} from 'countries-list'\r\n\r\nimport {saveShippingInfo} from \"../../actions/cartActions\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\n\r\nconst Shipping = ({history}) => {\r\n\r\n    const countriesList = Object.values(countries)\r\n    /*    the above countriesList library return like\r\n        US :{\r\n            name:'US',\r\n            captial\r\n        }*/\r\n\r\n    const {shippingInfo} = useSelector(state => state.cart)\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        //the dispatch method send this data to action reducer\r\n        dispatch(saveShippingInfo({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            phoneNo,\r\n            country\r\n        }))\r\n\r\n        history.push('/order/confirm')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'shipping Info'}/>\r\n\r\n            <CheckoutSteps shipping/>\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required>\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            CONTINUE\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Shipping","D:\\projects\\e-commerce\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\OrderSuccess.js",["188","189"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nconst OrderSuccess = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Success'}/>\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\"\r\n                         src=\"/images/order_success.png\" alt=\"Order Success\"\r\n                         width=\"200\" height=\"200\"/>\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/me\" >Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\ConfirmOrder.js",["190","191","192","193"],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\orederReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\ForgetPassword.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\userActions.js",[],"D:\\projects\\e-commerce\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Loader.js",["194"],"import  React , {Fragment} from \"react\";\r\n\r\n\r\nconst Loader = () =>{\r\n    return (\r\n        <div className=\"loader\">\r\n        {/*some css imported from app.css using className */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Loader\r\n\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\product\\product.js",["195"],"\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Product = ({product, col}) =>{\r\n\r\n    return (\r\n        <div  className={`col-sm-12 col-md-6 col-lg-${col} my-3 `}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={product.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`}>  {product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}>\r\n                            </div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Product","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Search.js",["196"],"import React, {useState} from 'react'\r\nimport MetaData from \"./MetaData\";\r\n\r\n\r\n//this function components added to the Header.js and take keyword to Home.js while render\r\nconst Search = ({history}) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            //used in Home.js file as a parameter to render item\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={searchHandler}>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"search_field\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Product Name ...\"\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button id=\"search_btn\" className=\"btn\">\r\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\CheckoutSteps.js",["197","198","199","200","201","202","203","204","205"],"D:\\projects\\e-commerce\\frontend\\src\\constants\\productConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\productActions.js",["206","207"],"D:\\projects\\e-commerce\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\orderActions.js",[],"D:\\projects\\e-commerce\\frontend\\src\\constants\\cartConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\order\\ListOrders.js",["208"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {MDBDataTable} from \"mdbreact\";\r\nimport Loader from \"../layout/Loader\";\r\nimport {myOrders, clearErrors} from \"../../actions/orderActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch()\r\n    const {loading, error, orders} = useSelector(state => state.myOrdersRed)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(myOrders())\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{color: 'green'}}>{order.orderStatus}</p>\r\n                    : <p style={{color: 'red'}}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={\"My Orders\"}/>\r\n\r\n            <h1 className=\"mt-5\"> My Orders </h1>\r\n            {loading ? <Loader/> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n\r\n                />\r\n            )}\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\projects\\e-commerce\\frontend\\src\\components\\order\\OrderDetails.js",["209","210"],"D:\\projects\\e-commerce\\frontend\\src\\components\\review\\ListReviews.js",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":33,"column":6,"nodeType":"217","endLine":33,"endColumn":56,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"219","line":44,"column":8,"nodeType":"217","endLine":44,"endColumn":52,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":8,"column":38,"nodeType":"223","messageId":"224","endLine":8,"endColumn":42},{"ruleId":"221","severity":1,"message":"225","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":29,"column":29,"nodeType":"228","endLine":29,"endColumn":58},{"ruleId":"226","severity":1,"message":"227","line":50,"column":37,"nodeType":"228","endLine":54,"endColumn":39},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"230","line":1,"column":36,"nodeType":"223","messageId":"224","endLine":1,"endColumn":45},{"ruleId":"221","severity":1,"message":"231","line":11,"column":11,"nodeType":"223","messageId":"224","endLine":11,"endColumn":16},{"ruleId":"221","severity":1,"message":"230","line":1,"column":36,"nodeType":"223","messageId":"224","endLine":1,"endColumn":45},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"230","line":1,"column":36,"nodeType":"223","messageId":"224","endLine":1,"endColumn":45},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"230","line":1,"column":36,"nodeType":"223","messageId":"224","endLine":1,"endColumn":45},{"ruleId":"221","severity":1,"message":"232","line":3,"column":9,"nodeType":"223","messageId":"224","endLine":3,"endColumn":17},{"ruleId":"221","severity":1,"message":"233","line":7,"column":9,"nodeType":"223","messageId":"224","endLine":7,"endColumn":20},{"ruleId":"221","severity":1,"message":"234","line":1,"column":18,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":10,"column":17,"nodeType":"228","endLine":13,"endColumn":19},{"ruleId":"221","severity":1,"message":"225","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":16},{"ruleId":"221","severity":1,"message":"234","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"230","line":1,"column":36,"nodeType":"223","messageId":"224","endLine":1,"endColumn":45},{"ruleId":"221","severity":1,"message":"233","line":2,"column":9,"nodeType":"223","messageId":"224","endLine":2,"endColumn":20},{"ruleId":"221","severity":1,"message":"235","line":2,"column":22,"nodeType":"223","messageId":"224","endLine":2,"endColumn":33},{"ruleId":"221","severity":1,"message":"232","line":3,"column":9,"nodeType":"223","messageId":"224","endLine":3,"endColumn":17},{"ruleId":"221","severity":1,"message":"225","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":16},{"ruleId":"221","severity":1,"message":"236","line":6,"column":9,"nodeType":"223","messageId":"224","endLine":6,"endColumn":22},{"ruleId":"221","severity":1,"message":"237","line":6,"column":24,"nodeType":"223","messageId":"224","endLine":6,"endColumn":42},{"ruleId":"221","severity":1,"message":"238","line":13,"column":5,"nodeType":"223","messageId":"224","endLine":13,"endColumn":21},{"ruleId":"221","severity":1,"message":"239","line":18,"column":9,"nodeType":"223","messageId":"224","endLine":18,"endColumn":15},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"229","line":1,"column":26,"nodeType":"223","messageId":"224","endLine":1,"endColumn":34},{"ruleId":"221","severity":1,"message":"240","line":5,"column":9,"nodeType":"223","messageId":"224","endLine":5,"endColumn":21},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["243"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["244"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'MetaData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'alert' is assigned a value but never used.","'useAlert' is defined but never used.","'useDispatch' is defined but never used.","'Fragment' is defined but never used.","'useSelector' is defined but never used.","'addItemToCart' is defined but never used.","'removeItemFromCart' is defined but never used.","'NEW_REVIEW_RESET' is defined but never used.","'config' is defined but never used.","'MDBDataTable' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"251","text":"252"},[1249,1299],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1373,1417],"[dispatch, alert, error, history, isUpdated, user]"]