[{"D:\\projects\\e-commerce\\frontend\\src\\index.js":"1","D:\\projects\\e-commerce\\frontend\\src\\App.js":"2","D:\\projects\\e-commerce\\frontend\\src\\store.js":"3","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Login.js":"4","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Profile.js":"5","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Footer.js":"6","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Register.js":"7","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdatePassword.js":"8","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdateProfile.js":"9","D:\\projects\\e-commerce\\frontend\\src\\components\\Home.js":"10","D:\\projects\\e-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js":"11","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\NewPassword.js":"12","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Header.js":"13","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Payment.js":"14","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Cart.js":"15","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Shipping.js":"16","D:\\projects\\e-commerce\\frontend\\src\\components\\product\\ProductDetails.js":"17","D:\\projects\\e-commerce\\frontend\\src\\reducers\\productReducers.js":"18","D:\\projects\\e-commerce\\frontend\\src\\reducers\\userReducers.js":"19","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\OrderSuccess.js":"20","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\ConfirmOrder.js":"21","D:\\projects\\e-commerce\\frontend\\src\\reducers\\orederReducers.js":"22","D:\\projects\\e-commerce\\frontend\\src\\reducers\\cartReducers.js":"23","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\ForgetPassword.js":"24","D:\\projects\\e-commerce\\frontend\\src\\actions\\userActions.js":"25","D:\\projects\\e-commerce\\frontend\\src\\constants\\userConstants.js":"26","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Loader.js":"27","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\MetaData.js":"28","D:\\projects\\e-commerce\\frontend\\src\\components\\product\\product.js":"29","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Search.js":"30","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\CheckoutSteps.js":"31","D:\\projects\\e-commerce\\frontend\\src\\constants\\productConstants.js":"32","D:\\projects\\e-commerce\\frontend\\src\\actions\\productActions.js":"33","D:\\projects\\e-commerce\\frontend\\src\\constants\\orderConstants.js":"34","D:\\projects\\e-commerce\\frontend\\src\\actions\\orderActions.js":"35","D:\\projects\\e-commerce\\frontend\\src\\constants\\cartConstants.js":"36","D:\\projects\\e-commerce\\frontend\\src\\actions\\cartActions.js":"37","D:\\projects\\e-commerce\\frontend\\src\\components\\order\\ListOrders.js":"38","D:\\projects\\e-commerce\\frontend\\src\\components\\order\\OrderDetails.js":"39","D:\\projects\\e-commerce\\frontend\\src\\components\\review\\ListReviews.js":"40","D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\Dashboard.js":"41","D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\Sidebar.js":"42","D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\ProductsList.js":"43","D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\NewProduct.js":"44"},{"size":908,"mtime":1667284466091,"results":"45","hashOfConfig":"46"},{"size":4234,"mtime":1670246276582,"results":"47","hashOfConfig":"46"},{"size":1477,"mtime":1670240274814,"results":"48","hashOfConfig":"46"},{"size":3264,"mtime":1667906957821,"results":"49","hashOfConfig":"46"},{"size":2220,"mtime":1667284466086,"results":"50","hashOfConfig":"46"},{"size":427,"mtime":1667284466084,"results":"51","hashOfConfig":"46"},{"size":4535,"mtime":1667284466087,"results":"52","hashOfConfig":"46"},{"size":3060,"mtime":1667284466087,"results":"53","hashOfConfig":"46"},{"size":5277,"mtime":1667290431839,"results":"54","hashOfConfig":"46"},{"size":8937,"mtime":1667284466084,"results":"55","hashOfConfig":"46"},{"size":943,"mtime":1670229251959,"results":"56","hashOfConfig":"46"},{"size":3009,"mtime":1667310749580,"results":"57","hashOfConfig":"46"},{"size":3504,"mtime":1667378647517,"results":"58","hashOfConfig":"46"},{"size":5721,"mtime":1668409757739,"results":"59","hashOfConfig":"46"},{"size":5502,"mtime":1667906957819,"results":"60","hashOfConfig":"46"},{"size":4969,"mtime":1670246481931,"results":"61","hashOfConfig":"46"},{"size":10644,"mtime":1670246731073,"results":"62","hashOfConfig":"46"},{"size":4178,"mtime":1670240191373,"results":"63","hashOfConfig":"46"},{"size":4385,"mtime":1669618789245,"results":"64","hashOfConfig":"46"},{"size":828,"mtime":1668406143503,"results":"65","hashOfConfig":"46"},{"size":4038,"mtime":1670225229699,"results":"66","hashOfConfig":"46"},{"size":2355,"mtime":1670226121841,"results":"67","hashOfConfig":"46"},{"size":1269,"mtime":1669618789224,"results":"68","hashOfConfig":"46"},{"size":2241,"mtime":1667293365858,"results":"69","hashOfConfig":"46"},{"size":5694,"mtime":1669619347265,"results":"70","hashOfConfig":"46"},{"size":1518,"mtime":1667303851108,"results":"71","hashOfConfig":"46"},{"size":234,"mtime":1667284466084,"results":"72","hashOfConfig":"46"},{"size":326,"mtime":1667284466085,"results":"73","hashOfConfig":"46"},{"size":1325,"mtime":1667284466085,"results":"74","hashOfConfig":"46"},{"size":1324,"mtime":1667284466085,"results":"75","hashOfConfig":"46"},{"size":2411,"mtime":1670246446725,"results":"76","hashOfConfig":"46"},{"size":1046,"mtime":1670239740411,"results":"77","hashOfConfig":"46"},{"size":3854,"mtime":1670245196230,"results":"78","hashOfConfig":"46"},{"size":560,"mtime":1669618789167,"results":"79","hashOfConfig":"46"},{"size":2102,"mtime":1670246175695,"results":"80","hashOfConfig":"46"},{"size":162,"mtime":1667906957829,"results":"81","hashOfConfig":"46"},{"size":1275,"mtime":1669619347282,"results":"82","hashOfConfig":"46"},{"size":2800,"mtime":1668587993608,"results":"83","hashOfConfig":"46"},{"size":3923,"mtime":1670226997131,"results":"84","hashOfConfig":"46"},{"size":761,"mtime":1669639503225,"results":"85","hashOfConfig":"46"},{"size":4962,"mtime":1670239497258,"results":"86","hashOfConfig":"46"},{"size":1720,"mtime":1670229551976,"results":"87","hashOfConfig":"46"},{"size":3410,"mtime":1670238519353,"results":"88","hashOfConfig":"46"},{"size":8656,"mtime":1670243348285,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"jywhpr",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"92"},"D:\\projects\\e-commerce\\frontend\\src\\index.js",[],["194","195"],"D:\\projects\\e-commerce\\frontend\\src\\App.js",["196"],"D:\\projects\\e-commerce\\frontend\\src\\store.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Login.js",["197"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../layout/Loader\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { login, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst Login = ({ history, location }) => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  //isAuthenticated, error, loading parametrs call from userReducers.js  authReducer method\r\n  const { isAuthenticated, error, loading } = useSelector(\r\n    (state) => state.auth\r\n  ); // auth is from userReducers\r\n\r\n  //this check it the user is checkout some item , and he is not logged in ,\r\n  // will add shipping to the url after login\r\n  // http://localhost:3000/login?redirect=shipping\r\n  const redirect = location.search? location.search.split('=')[1]:'/'\r\n//and take shipping else '/'\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // history.push(\"/\");\r\n      history.push(redirect)\r\n    }\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n  }, [dispatch, alert, isAuthenticated, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //this link to login.js component\r\n    //call login.js component\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={\"Login\"} />\r\n          <div className=\"row wrapper\">\r\n            <div className=\"col-10 col-lg-5\">\r\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                <h1 className=\"mb-3\">Login</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email_field\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email_field\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_field\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password_field\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <Link to=\"/password/forget\" className=\"float-right mb-4\">\r\n                  Forgot Password?\r\n                </Link>\r\n\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                >\r\n                  LOGIN\r\n                </button>\r\n\r\n                <Link to=\"/register\" className=\"float-right mt-3\">\r\n                  New User?\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Profile.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\Register.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\UpdateProfile.js",["198"],"import React, {Fragment, useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {updateProfile, loadUser, clearErrors} from \"../../actions/userActions\";\r\nimport {UPDATE_PROFILE_RESET} from \"../../constants/userConstants\";\r\n\r\n\r\nconst UpdateProfile = ({history}) => {\r\n\r\n    const [name, setName] = useState();\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    const [avatarPreview, setAvatarPreview] = useState(\"/images/camera.jpg\");\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const {user} = useSelector((state) => state.auth); // auth is from userReducers\r\n\r\n    const {error, isUpdated, loading} = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n\r\n        }\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('user updated successfully')\r\n            dispatch(loadUser())\r\n            history.push('/me')\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n\r\n        }\r\n    }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set(\"name\", name);\r\n        formData.set(\"email\", email);\r\n        formData.set(\"avatar\", avatar);\r\n\r\n        dispatch(updateProfile(formData));\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result);\r\n                setAvatar(reader.result);\r\n            }\r\n        };\r\n\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={\"Update Profile\"}/>\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={(e) =>setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={(e) =>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        name=\"avatar\"\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"   disabled={loading ? true : false}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateProfile","D:\\projects\\e-commerce\\frontend\\src\\components\\Home.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Header.js",["199","200","201"],"import React, {Fragment} from \"react\";\r\nimport '../../App.css'\r\nimport {Link, Route} from 'react-router-dom'\r\nimport MetaData from \"./MetaData\";\r\nimport Search from \"./Search\";\r\nimport {useAlert} from 'react-alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {logout} from \"../../actions/userActions\";\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const {user, loading} = useSelector(state => state.auth)\r\n\r\n    const {cartItems} = useSelector(state => state.cart)\r\n    const logoutHandler = () =>{\r\n        dispatch(logout());\r\n        alert.success('Logged out Successfully.')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to={'/'}>\r\n                            <img src=\"/images/logo.png\"/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n\r\n                    <Route render={({history}) => <Search history={history}/>}/>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{textDecoration: 'none'}}>\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        // alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                {/*<Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>*/}\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>\r\n                    }\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Payment.js",["202"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {useAlert} from \"react-alert\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\nimport {useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement} from \"@stripe/react-stripe-js\";\r\n\r\nimport {createOrder, clearErrors} from \"../../actions/orderActions\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\nconst Payment = ({history}) => {\r\n\r\n\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const {user} = useSelector(state => state.auth)\r\n    const {cartItems, shippingInfo} = useSelector(state => state.cart);\r\n\r\n    const {error} = useSelector(state => state.newOrder);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'))\r\n    if (orderInfo) {\r\n\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            if (!stripe || !elements) {\r\n                return\r\n            }\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false\r\n            } else {\r\n                //the payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    //    TODO : New Order\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n                    dispatch(createOrder(order))\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error(\"There is some issue while payment processing\");\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false\r\n            alert.error(error.response.data.message)\r\n\r\n            console.log(error.response.data)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <MetaData title={'Payment-detail'}/>\r\n\r\n            <CheckoutSteps shipping confirmOrder payment/>\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay{` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Payment","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Cart.js",["203","204","205"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport {addItemToCart,removeItemFromCart} from \"../../actions/cartActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Cart = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const {cartItems} = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) =>{\r\n\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n\r\n        const newQty = quantity + 1\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n    const decreaseQty = (id, quantity) => {\r\n        const newQty = quantity - 1\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    //when the user click checkout button and the user is not logged in it should be redirect to login?redirect=shipping page\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'}/>\r\n\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\"> Your cart is empty </h2> : (\r\n                <Fragment>\r\n                    <div className=\"container container-fluid\">\r\n                        <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length}</b></h2>\r\n\r\n                        <div className=\"row d-flex justify-content-between\">\r\n                            <div className=\"col-12 col-lg-8\">\r\n\r\n                                {cartItems.map(item => (\r\n                                    <Fragment>\r\n                                        <hr/>\r\n                                        <div className=\"cart-item\" key={item.product}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-4 col-lg-3\">\r\n                                                    <img src={item.image} alt=\"Laptop\" height=\"90\"\r\n                                                         width=\"115\"/>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-3\">\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p id=\"card_item_price\">$ {item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <div className=\"stockCounter d-inline\">\r\n                                                        <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}\r\n                                                              readOnly>-</span>\r\n                                                        <input type=\"number\" className=\"form-control count d-inline\"\r\n                                                               value={item.quantity}/>\r\n\r\n                                                        <span className=\"btn btn-primary plus\"\r\n                                                              value={item.quantity}\r\n                                                              onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                    <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)}></i>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr/>\r\n                                    </Fragment>\r\n                                ))}\r\n\r\n                                <hr/>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-lg-3 my-4\">\r\n                                <div id=\"order_summary\">\r\n                                    <h4>Order Summary</h4>\r\n                                    <hr/>\r\n                                    <p>Subtotal: <span className=\"order-summary-values\">{cartItems.reduce((acc , item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                    <p>Est. total: <span className=\"order-summary-values\">$ {cartItems.reduce((acc , item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                    <hr/>\r\n                                    <button id=\"checkout_btn\" onClick={checkoutHandler} className=\"btn btn-primary btn-block\">Check out</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\Shipping.js",["206"],"D:\\projects\\e-commerce\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\OrderSuccess.js",["207","208"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nconst OrderSuccess = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Success'}/>\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\"\r\n                         src=\"/images/order_success.png\" alt=\"Order Success\"\r\n                         width=\"200\" height=\"200\"/>\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/me\" >Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\ConfirmOrder.js",["209","210","211","212"],"import React, {Fragment, useState, useEffect} from 'react'\r\n\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\n\r\nconst ConfirmOrder = ({history}) => {\r\n\r\n\r\n    const {cartItems, shippingInfo} = useSelector(state => state.cart)\r\n    const {user} = useSelector(state => state.auth)\r\n\r\n    //Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity , 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0: 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment =() =>{\r\n        const data ={\r\n            itemsPrice:itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n\r\n        }\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Confirm Order  '}/>\r\n\r\n            <CheckoutSteps shipping confirmOrder/>\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\">\r\n                        <b>Address:</b> {`${shippingInfo.address},\r\n                         ${shippingInfo.city}, \r\n                         ${shippingInfo.postalCode}, \r\n                         ${shippingInfo.country}`}\r\n                    </p>\r\n\r\n                    <hr/>\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr/>\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}  >{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity } x $ {item.price}  = <b>${(item.quantity * item.price).toFixed(2)} </b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                    <hr/>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr/>\r\n                        <p>Subtotal: <span className=\"order-summary-values\">${itemsPrice.toFixed(2)}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice.toFixed(2)}</span></p>\r\n                        <p>Tax: <span className=\"order-summary-values\">${taxPrice.toFixed(2)}</span></p>\r\n\r\n                        <hr/>\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr/>\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder","D:\\projects\\e-commerce\\frontend\\src\\reducers\\orederReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\user\\ForgetPassword.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\userActions.js",[],"D:\\projects\\e-commerce\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Loader.js",["213"],"import  React , {Fragment} from \"react\";\r\n\r\n\r\nconst Loader = () =>{\r\n    return (\r\n        <div className=\"loader\">\r\n        {/*some css imported from app.css using className */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Loader\r\n\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\product\\product.js",["214"],"\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Product = ({product, col}) =>{\r\n\r\n    return (\r\n        <div  className={`col-sm-12 col-md-6 col-lg-${col} my-3 `}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={product.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`}>  {product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}>\r\n                            </div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Product","D:\\projects\\e-commerce\\frontend\\src\\components\\layout\\Search.js",["215"],"import React, {useState} from 'react'\r\nimport MetaData from \"./MetaData\";\r\n\r\n\r\n//this function components added to the Header.js and take keyword to Home.js while render\r\nconst Search = ({history}) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            //used in Home.js file as a parameter to render item\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={searchHandler}>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"search_field\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Product Name ...\"\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button id=\"search_btn\" className=\"btn\">\r\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search","D:\\projects\\e-commerce\\frontend\\src\\components\\cart\\CheckoutSteps.js",["216","217","218","219","220","221","222","223","224"],"D:\\projects\\e-commerce\\frontend\\src\\constants\\productConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\productActions.js",["225","226"],"D:\\projects\\e-commerce\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\orderActions.js",[],"D:\\projects\\e-commerce\\frontend\\src\\constants\\cartConstants.js",[],"D:\\projects\\e-commerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\order\\ListOrders.js",["227"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {MDBDataTable} from \"mdbreact\";\r\nimport Loader from \"../layout/Loader\";\r\nimport {myOrders, clearErrors} from \"../../actions/orderActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch()\r\n    const {loading, error, orders} = useSelector(state => state.myOrdersRed)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(myOrders())\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{color: 'green'}}>{order.orderStatus}</p>\r\n                    : <p style={{color: 'red'}}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={\"My Orders\"}/>\r\n\r\n            <h1 className=\"mt-5\"> My Orders </h1>\r\n            {loading ? <Loader/> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n\r\n                />\r\n            )}\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\projects\\e-commerce\\frontend\\src\\components\\order\\OrderDetails.js",["228","229"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {MDBDataTable} from \"mdbreact\";\r\nimport Loader from \"../layout/Loader\";\r\nimport {getOrderDetails, clearErrors} from \"../../actions/orderActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst OrderDetails = ({match}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading, error, order = {}} = useSelector(state => state.orderDetails)\r\n    const {shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus} = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Details'}/>\r\n\r\n            {loading ? <Loader/> : (\r\n                <Fragment>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                            <hr/>\r\n\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"}>\r\n                                <b>{orderStatus}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr/>\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\"/>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p>${item.price}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default OrderDetails","D:\\projects\\e-commerce\\frontend\\src\\components\\review\\ListReviews.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\Dashboard.js",["230","231","232","233"],"import React, {Fragment, useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Loader from \"../layout/Loader\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport {clearErrors, getAdminProducts} from \"../../actions/productActions\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst Dashboard = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {products} = useSelector(state => state.products)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getAdminProducts())\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n                    <div className=\"row pr-4\">\r\n                        <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                            <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Total Amount<br/> <b>$4567</b>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row pr-4\">\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Products<br/>\r\n                                        <b>{products && products.length}</b></div>\r\n                                </div>\r\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                    <span className=\"float-left\">View Details</span>\r\n                                    <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Orders<br/> <b>125</b></div>\r\n                                </div>\r\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                    <span className=\"float-left\">View Details</span>\r\n                                    <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Users<br/> <b>45</b></div>\r\n                                </div>\r\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                    <span className=\"float-left\">View Details</span>\r\n                                    <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Out of Stock<br/> <b>{outOfStock}</b>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\ProductsList.js",["234"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {MDBDataTable} from \"mdbreact\";\r\nimport Loader from \"../layout/Loader\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getAdminProducts, clearErrors} from \"../../actions/productActions\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst ProductsList = ({history}) => {\r\n\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch()\r\n    const {loading, error, products} = useSelector(state => state.products)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getAdminProducts())\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                Name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions:\r\n                    <Fragment>\r\n                        <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </Link>\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                            // onClick={() => deleteProductHandler(product._id)}\r\n                        >\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n\r\n                        {loading ? <Loader/> : (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProductsList;\r\n","D:\\projects\\e-commerce\\frontend\\src\\components\\admin\\NewProduct.js",["235"],"import React, {Fragment, useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {newProduct, clearErrors} from \"../../actions/productActions\";\r\nimport {NEW_PRODUCT_RESET} from \"../../constants/productConstants\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst NewProduct = ({history}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading, error, success} = useSelector(state => state.newProduct);\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully');\r\n            dispatch({type: NEW_PRODUCT_RESET})\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([]);\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <MetaData title={'New Product'}/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar/>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\"\r\n                                              value={description}\r\n                                              onChange={(e) => setDescription(e.target.value)}>\r\n                                    </textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category}\r\n                                            onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                        </label>\r\n                                    </div>\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\"\r\n                                             height=\"52\"/>\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NewProduct;",{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":40,"column":9,"nodeType":"242","messageId":"243","endLine":40,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":33,"column":6,"nodeType":"246","endLine":33,"endColumn":56,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":44,"column":8,"nodeType":"246","endLine":44,"endColumn":52,"suggestions":"249"},{"ruleId":"240","severity":1,"message":"250","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":29,"column":29,"nodeType":"253","endLine":29,"endColumn":58},{"ruleId":"251","severity":1,"message":"252","line":50,"column":37,"nodeType":"253","endLine":54,"endColumn":39},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"255","line":1,"column":36,"nodeType":"242","messageId":"243","endLine":1,"endColumn":45},{"ruleId":"240","severity":1,"message":"256","line":11,"column":11,"nodeType":"242","messageId":"243","endLine":11,"endColumn":16},{"ruleId":"240","severity":1,"message":"255","line":1,"column":36,"nodeType":"242","messageId":"243","endLine":1,"endColumn":45},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"255","line":1,"column":36,"nodeType":"242","messageId":"243","endLine":1,"endColumn":45},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"255","line":1,"column":36,"nodeType":"242","messageId":"243","endLine":1,"endColumn":45},{"ruleId":"240","severity":1,"message":"257","line":3,"column":9,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"240","severity":1,"message":"258","line":7,"column":9,"nodeType":"242","messageId":"243","endLine":7,"endColumn":20},{"ruleId":"240","severity":1,"message":"259","line":1,"column":18,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"252","line":10,"column":17,"nodeType":"253","endLine":13,"endColumn":19},{"ruleId":"240","severity":1,"message":"250","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":16},{"ruleId":"240","severity":1,"message":"259","line":1,"column":16,"nodeType":"242","messageId":"243","endLine":1,"endColumn":24},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"255","line":1,"column":36,"nodeType":"242","messageId":"243","endLine":1,"endColumn":45},{"ruleId":"240","severity":1,"message":"258","line":2,"column":9,"nodeType":"242","messageId":"243","endLine":2,"endColumn":20},{"ruleId":"240","severity":1,"message":"260","line":2,"column":22,"nodeType":"242","messageId":"243","endLine":2,"endColumn":33},{"ruleId":"240","severity":1,"message":"257","line":3,"column":9,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"240","severity":1,"message":"250","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":16},{"ruleId":"240","severity":1,"message":"261","line":6,"column":9,"nodeType":"242","messageId":"243","endLine":6,"endColumn":22},{"ruleId":"240","severity":1,"message":"262","line":6,"column":24,"nodeType":"242","messageId":"243","endLine":6,"endColumn":42},{"ruleId":"240","severity":1,"message":"263","line":13,"column":5,"nodeType":"242","messageId":"243","endLine":13,"endColumn":21},{"ruleId":"240","severity":1,"message":"264","line":25,"column":9,"nodeType":"242","messageId":"243","endLine":25,"endColumn":15},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"265","line":5,"column":9,"nodeType":"242","messageId":"243","endLine":5,"endColumn":21},{"ruleId":"240","severity":1,"message":"250","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":16},{"ruleId":"240","severity":1,"message":"266","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"240","severity":1,"message":"267","line":6,"column":9,"nodeType":"242","messageId":"243","endLine":6,"endColumn":20},{"ruleId":"240","severity":1,"message":"257","line":7,"column":9,"nodeType":"242","messageId":"243","endLine":7,"endColumn":17},{"ruleId":"240","severity":1,"message":"254","line":1,"column":26,"nodeType":"242","messageId":"243","endLine":1,"endColumn":34},{"ruleId":"240","severity":1,"message":"268","line":5,"column":9,"nodeType":"242","messageId":"243","endLine":5,"endColumn":13},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'newProduct' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["271"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["272"],"'MetaData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'alert' is assigned a value but never used.","'useAlert' is defined but never used.","'useDispatch' is defined but never used.","'Fragment' is defined but never used.","'useSelector' is defined but never used.","'addItemToCart' is defined but never used.","'removeItemFromCart' is defined but never used.","'NEW_REVIEW_RESET' is defined but never used.","'config' is defined but never used.","'MDBDataTable' is defined but never used.","'Loader' is defined but never used.","'clearErrors' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"279","text":"280"},[1249,1299],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1373,1417],"[dispatch, alert, error, history, isUpdated, user]"]